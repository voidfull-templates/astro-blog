---
import { clsx } from "clsx";

import { config } from "../../config";
// Replace Voidfull API with static data
// import { Client as Voidfull } from "../lib/voidfull";

import BaseLayout from "../layouts/Base.astro";
import VoidfullWelcome from "../components/Voidfull/Root.astro";
import { PostCardContent } from "../components/Post/PostCardContent";
import { PostCardImage } from "../components/Post/PostCardImage";

// Use static demo data instead of API call
// const data = await Voidfull.sites.posts.list();
const demoData = {
  posts: [
    {
      title: "Getting Started with Astro",
      slug: "getting-started",
      excerpt: "Learn how to build lightning-fast websites with Astro.",
      publishedAt: new Date().toISOString(),
      featureImage: null
    },
    {
      title: "Why Astro is Great for Blogs",
      slug: "astro-for-blogs",
      excerpt: "Discover the benefits of using Astro for your blog sites.",
      publishedAt: new Date().toISOString(),
      featureImage: null
    }
  ]
};
---

<BaseLayout
  description="A place for you read anytime and anywhere."
  url={config.site}
>
  <section class="max-w-6xl mx-auto px-4">
    <hr class="border-gray-200 mb-12" />

    <section class={clsx("my-10")}>
      <VoidfullWelcome />
    </section>

    {/* Posts */}
    <div class="grid gap-10 md:grid-cols-2">
      {
        demoData.posts
          .filter((item) => item.publishedAt !== null)
          .map((post) => (
            <article class={clsx("grid gap-4", "group")}>
              {post.featureImage ? (
                <PostCardImage
                  title={post.title}
                  slug={post.slug}
                  featureImage={post.featureImage}
                />
              ) : null}

              <PostCardContent
                title={post.title}
                slug={post.slug}
                excerpt={post.excerpt}
                publishedAt={post.publishedAt}
              />
            </article>
          ))
      }
    </div>
  </section>
</BaseLayout>
